name: 'Terraform CI/CD'

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TF_VERSION: '1.11.0'
  TG_VERSION: '0.71.2'
  AWS_REGION: 'us-east-1'

jobs:
  validate:
    name: 'Validate'
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Setup Terragrunt
      run: |
        wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
        chmod +x terragrunt
        sudo mv terragrunt /usr/local/bin/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Detect changes
      id: changes
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..HEAD)
        else
          CHANGED_FILES=$(git diff --name-only HEAD~1..HEAD)
        fi
        
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        if echo "$CHANGED_FILES" | grep -E '\.(tf|hcl)$'; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Terragrunt Format Check
      if: steps.changes.outputs.changes == 'true'
      run: |
        terragrunt run-all fmt -check

    - name: Terragrunt Validate
      if: steps.changes.outputs.changes == 'true'
      run: |
        terragrunt run-all validate

    - name: Terragrunt Plan
      if: steps.changes.outputs.changes == 'true'
      run: |
        terragrunt run-all plan

  security:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.changes == 'true'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        output_format: sarif
        output_file_path: reports/results.sarif
        
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: reports/results.sarif

  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: github.ref == 'refs/heads/master' && needs.validate.outputs.changes == 'true'
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Setup Terragrunt
      run: |
        wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
        chmod +x terragrunt
        sudo mv terragrunt /usr/local/bin/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terragrunt Apply
      run: |
        terragrunt run-all apply --terragrunt-non-interactive

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… Infrastructure changes have been successfully applied!'
          }) 